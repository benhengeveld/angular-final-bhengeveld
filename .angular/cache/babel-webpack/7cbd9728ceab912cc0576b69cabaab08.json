{"ast":null,"code":"import { OrderStatus } from \"../models/orderStatus.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./database.service\";\nexport let OrderStatusDBService = /*#__PURE__*/(() => {\n  class OrderStatusDBService {\n    constructor(database) {\n      this.database = database;\n    }\n\n    static errorHandler(error) {\n      console.error(\"Error: \" + error);\n    }\n\n    selectAll() {\n      let options = [];\n      let orderStatuses = [];\n      return new Promise((resolve, reject) => {\n        function txFunction(tx) {\n          let sql = \"SELECT * FROM order_status;\";\n          tx.executeSql(sql, options, (tx, results) => {\n            if (results.rows.length > 0) {\n              for (let i = 0; i < results.rows.length; i++) {\n                let row = results.rows[i];\n                let orderStatus = new OrderStatus(row['status']);\n                orderStatus.id = row['id'];\n                orderStatuses.push(orderStatus);\n              }\n\n              resolve(orderStatuses);\n            } else {\n              reject(\"No order_statuses found\");\n            }\n          }, OrderStatusDBService.errorHandler);\n        }\n\n        this.database.getDatabase().transaction(txFunction, OrderStatusDBService.errorHandler, () => {\n          console.log('Success: order_status selectAll transaction successful');\n        });\n      });\n    }\n\n    select(id) {\n      let options = [id];\n      let orderStatus = null;\n      return new Promise((resolve, reject) => {\n        function txFunction(tx) {\n          let sql = \"SELECT * FROM order_status WHERE id=?;\";\n          tx.executeSql(sql, options, (tx, results) => {\n            if (results.rows.length > 0) {\n              let row = results.rows[0];\n              orderStatus = new OrderStatus(row['status']);\n              orderStatus.id = row['id'];\n              resolve(orderStatus);\n            } else {\n              reject(\"No store found\");\n            }\n          }, OrderStatusDBService.errorHandler);\n        }\n\n        this.database.getDatabase().transaction(txFunction, OrderStatusDBService.errorHandler, () => {\n          console.log('Success: stores select transaction successful');\n        });\n      });\n    }\n\n  }\n\n  OrderStatusDBService.ɵfac = function OrderStatusDBService_Factory(t) {\n    return new (t || OrderStatusDBService)(i0.ɵɵinject(i1.DatabaseService));\n  };\n\n  OrderStatusDBService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OrderStatusDBService,\n    factory: OrderStatusDBService.ɵfac,\n    providedIn: 'root'\n  });\n  return OrderStatusDBService;\n})();","map":null,"metadata":{},"sourceType":"module"}