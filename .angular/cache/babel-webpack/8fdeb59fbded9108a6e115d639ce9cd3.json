{"ast":null,"code":"import { Order } from \"../models/order.model\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/orders-db.service\";\nimport * as i3 from \"../services/stores-db.service\";\nimport * as i4 from \"../services/items-db.service\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\n\nfunction ModifyorderspageComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const store_r4 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", store_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\"\", store_r4.city, \", \", store_r4.address, \", \", store_r4.postalCode, \"\");\n  }\n}\n\nfunction ModifyorderspageComponent_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", item_r5.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", item_r5.name, \": $\", item_r5.price, \"\");\n  }\n}\n\nfunction ModifyorderspageComponent_h5_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h5\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" ERROR: \", ctx_r3.errors, \"\");\n  }\n}\n\nexport let ModifyorderspageComponent = /*#__PURE__*/(() => {\n  class ModifyorderspageComponent {\n    constructor(activatedRoute, ordersDB, storesDB, itemsDB) {\n      this.activatedRoute = activatedRoute;\n      this.ordersDB = ordersDB;\n      this.storesDB = storesDB;\n      this.itemsDB = itemsDB;\n      this.order = new Order(0, 0, 0);\n      this.stores = [];\n      this.items = [];\n      this.errors = \"\";\n    }\n\n    ngOnInit() {\n      let id = Number(this.activatedRoute.snapshot.paramMap.get('id'));\n      this.ordersDB.select(id).then(data => {\n        this.order = data;\n        console.info(data);\n      }).catch(err => {\n        console.error(err);\n      });\n      console.info(`test: ${this.order.itemId}`);\n      this.storesDB.selectAll().then(data => {\n        this.stores = data;\n        console.info(data);\n      }).catch(err => {\n        this.stores = [];\n        console.error(err);\n      });\n      this.itemsDB.selectAll().then(data => {\n        this.items = data;\n        console.info(data);\n      }).catch(err => {\n        this.items = [];\n        console.error(err);\n      });\n    }\n\n    btnUpdate_click() {\n      this.errors = \"\";\n      let quantityControl = new FormControl(this.order.quantity, Validators.compose([Validators.min(1), Validators.max(10000), Validators.required]));\n      Promise.allSettled([this.storesDB.select(this.order.storeId), this.itemsDB.select(this.order.itemId)]).then(data => {\n        if (data[0].status == 'rejected' || data[1].status == 'rejected' || quantityControl.errors != null) {\n          if (data[0].status == 'rejected') {\n            this.errors += \", Store is required\";\n          }\n\n          if (data[1].status == 'rejected') {\n            this.errors += \", Item is required\";\n          }\n\n          if (quantityControl.errors != null) {\n            this.errors += \", Quantity must be above 0 and less then 10,000\";\n          }\n\n          this.errors = this.errors.substring(2, this.errors.length);\n        } else {\n          this.ordersDB.insert(this.order, () => {\n            console.log(\"Record added successfully\");\n            alert(\"Record added successfully\");\n          });\n        }\n      });\n    }\n\n  }\n\n  ModifyorderspageComponent.ɵfac = function ModifyorderspageComponent_Factory(t) {\n    return new (t || ModifyorderspageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.OrdersDBService), i0.ɵɵdirectiveInject(i3.StoresDBService), i0.ɵɵdirectiveInject(i4.ItemsDBService));\n  };\n\n  ModifyorderspageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModifyorderspageComponent,\n    selectors: [[\"app-modifyorderspage\"]],\n    decls: 28,\n    vars: 9,\n    consts: [[1, \"m-4\"], [1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"myForm\", \"ngForm\"], [1, \"mb-3\"], [\"for\", \"selStore\", 1, \"form-label\"], [\"id\", \"selStore\", \"name\", \"selStore\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"selItem\", 1, \"form-label\"], [\"id\", \"selItem\", \"name\", \"selItem\", 1, \"form-select\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"numQuantity\", 1, \"form-label\"], [\"min\", \"1\", \"type\", \"number\", \"id\", \"numQuantity\", \"name\", \"numQuantity\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"style\", \"color: red\", 4, \"ngIf\"], [\"type\", \"button\", \"id\", \"btnAdd\", \"name\", \"btnAdd\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"card-footer\"], [3, \"value\"], [2, \"color\", \"red\"]],\n    template: function ModifyorderspageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"h2\");\n        i0.ɵɵtext(4, \"Update an Order\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"form\", null, 4);\n        i0.ɵɵelementStart(8, \"div\", 5);\n        i0.ɵɵelementStart(9, \"label\", 6);\n        i0.ɵɵtext(10, \"Store\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifyorderspageComponent_Template_select_ngModelChange_11_listener($event) {\n          return ctx.order.storeId = $event;\n        });\n        i0.ɵɵtemplate(12, ModifyorderspageComponent_option_12_Template, 2, 4, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 5);\n        i0.ɵɵelementStart(14, \"label\", 9);\n        i0.ɵɵtext(15, \"Item\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"select\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifyorderspageComponent_Template_select_ngModelChange_16_listener($event) {\n          return ctx.order.itemId = $event;\n        });\n        i0.ɵɵtemplate(17, ModifyorderspageComponent_option_17_Template, 2, 3, \"option\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 5);\n        i0.ɵɵelementStart(19, \"label\", 11);\n        i0.ɵɵtext(20, \"Quantity\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function ModifyorderspageComponent_Template_input_ngModelChange_21_listener($event) {\n          return ctx.order.quantity = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, ModifyorderspageComponent_h5_22_Template, 2, 1, \"h5\", 13);\n        i0.ɵɵelementStart(23, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function ModifyorderspageComponent_Template_button_click_23_listener() {\n          return ctx.btnUpdate_click();\n        });\n        i0.ɵɵtext(24, \"Update\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 15);\n        i0.ɵɵtext(26);\n        i0.ɵɵpipe(27, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(7);\n\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngModel\", ctx.order.storeId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.stores);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.order.itemId);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.order.quantity);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errors != \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(27, 7, _r0.value), \" \");\n      }\n    },\n    directives: [i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.NgForm, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgModel, i6.NgForOf, i5.MinValidator, i5.NumberValueAccessor, i5.DefaultValueAccessor, i6.NgIf, i5.NgSelectOption, i5.ɵNgSelectMultipleOption],\n    pipes: [i6.JsonPipe],\n    styles: [\"\"]\n  });\n  return ModifyorderspageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}